
CREATE TABLE "tbl_employee" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text NOT NULL,
  "username" varchar(200) UNIQUE NOT NULL,
  "password" text NOT NULL
);

COMMENT ON TABLE "tbl_employee" IS 'Use for the user login and employee information';
COMMENT ON COLUMN "tbl_employee"."id" IS 'unique identifier for table';
COMMENT ON COLUMN "tbl_employee"."name" IS 'Accept text input and for employee display name';
COMMENT ON COLUMN "tbl_employee"."username" IS 'Accept max 200 character and must be uniuqe';
COMMENT ON COLUMN "tbl_employee"."password" IS 'Accept text input';

CREATE TABLE "tbl_task" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" text NOT NULL,
  "description" text,
  "priority" varchar(20),
  "status" varchar(20) NOT NULL,
  "start_date" date,
  "due_date" date,
  "assign_employee_id" integer,
  "created_by" integer NOT NULL,
  "created_date" timestamp NOT NULL DEFAULT (now()),
  "updated_by" integer,
  "updated_date" timestamp
);
COMMENT ON COLUMN "tbl_task"."start_date" IS 'Optional and accept date formart yyyy-mm-dd';
COMMENT ON COLUMN "tbl_task"."due_date" IS 'Optional and accept date formart yyyy-mm-dd';
COMMENT ON COLUMN "tbl_task"."assign_employee_id" IS 'Accept optional and assignee id that belong to employee id';
COMMENT ON COLUMN "tbl_task"."created_by" IS 'Mandatory and value belong to employee id that create record';
COMMENT ON COLUMN "tbl_task"."updated_date" IS 'Optional and accept date formart yyyy-mm-dd HH:mm:ss';
COMMENT ON COLUMN "tbl_task"."updated_by" IS 'Optional and value belong to employee id that update record';
COMMENT ON TABLE "tbl_task" IS 'Use to store task information';
COMMENT ON COLUMN "tbl_task"."id" IS 'unique identifier for table';
COMMENT ON COLUMN "tbl_task"."title" IS 'Accept text and for task name';
COMMENT ON COLUMN "tbl_task"."description" IS 'Accept text and for task detail';
COMMENT ON COLUMN "tbl_task"."priority" IS 'Accept max 20 character and supoort
    HIGH = For high priority task
    MEDUIM = For Meduim priority task
    LOW = For Low priority task
  ';
COMMENT ON COLUMN "tbl_task"."status" IS 'Accept max 20 character and supoort
    NOT_STARTED = For task that not yet start
    IN_PROGRESS = For task that already assign to employee and they are working on it
    COMPLETED = For task that already completed
  ';


CREATE TABLE "tbl_log" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "description" text NOT NULL,
  "created_by" integer,
  "created_date" timestamp NOT NULL DEFAULT (now())
);
COMMENT ON TABLE "tbl_log" IS 'Use to store audit logs';
COMMENT ON COLUMN "tbl_log"."id" IS 'unique identifier for table';
COMMENT ON COLUMN "tbl_log"."description" IS 'Mandatory and to store audit detail log from users';
COMMENT ON COLUMN "tbl_log"."created_by" IS 'Mandatory and value belong to employee id that create record';
COMMENT ON COLUMN "tbl_log"."created_date" IS 'Mandatory and accept date formart yyyy-mm-dd HH:mm:ss';

CREATE TABLE "tbl_task_history" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "task_id" integer NOT NULL,
  "description" text NOT NULL,
  "created_by" integer NOT NULL,
  "created_date" timestamp NOT NULL
);

COMMENT ON TABLE "tbl_task_history" IS 'Use to store task history';
COMMENT ON COLUMN "tbl_task_history"."id" IS 'unique identifier for table';
COMMENT ON COLUMN "tbl_task_history"."task_id" IS 'Mandatory and value belong to task id';
COMMENT ON COLUMN "tbl_task_history"."description" IS 'Mandatory and value store update employee update info of task';
COMMENT ON COLUMN "tbl_task_history"."created_by" IS 'Mandatory and value belong to employee id that create record';
COMMENT ON COLUMN "tbl_task_history"."created_date" IS 'Mandatory and accept date formart yyyy-mm-dd HH:mm:ss';

ALTER TABLE "tbl_task" ADD FOREIGN KEY ("assign_employee_id") REFERENCES "tbl_employee" ("id");
ALTER TABLE "tbl_task" ADD FOREIGN KEY ("created_by") REFERENCES "tbl_employee" ("id");
ALTER TABLE "tbl_task_history" ADD FOREIGN KEY ("created_by") REFERENCES "tbl_employee" ("id");
ALTER TABLE "tbl_task_history" ADD FOREIGN KEY ("task_id") REFERENCES "tbl_task" ("id");
ALTER TABLE "tbl_log" ADD FOREIGN KEY ("created_by") REFERENCES "tbl_employee" ("id");



